library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity top is
port(
    RESET_syn       : in std_logic;
    BTNC        : in std_logic;
    SW          : in std_logic_vector(8-1 downto 0);
    CLK100MHZ   : in std_logic;  
    rx          : in std_logic;
    LED         : out std_logic_vector(8-1 downto 0);
    tx          : out std_logic;
    tx_end      : out std_logic;
    tx_A        : out std_logic
);   
end top;

architecture Behavioral of top is
    signal BTreset : std_logic;
    signal s_data : std_logic_vector(8-1 downto 0);
    signal s_bound : std_logic_vector(16-1 downto 0);
    signal s_enable : std_logic;
    -- Deklarace kódu Nastaveni_LED_Binarni
    signal s_Nastaveni_LED_Binarni : std_logic_vector(8-1 downto 0);
begin
    s_data(0) <= SW(0);
    s_data(1) <= SW(1);
    s_data(2) <= SW(2);
    s_data(3) <= SW(3);
    s_data(4) <= SW(4);
    s_data(5) <= SW(5);
    s_data(6) <= SW(6);
    s_data(7) <= SW(7);
    
    -- Instance komponenty Nastaveni_LED_Binarni
    Nastaveni_LED_Binarni_inst : Nastaveni_LED_Binarni
    port map (
        SW => s_data,
        LED => s_Nastaveni_LED_Binarni
    );

    RX_UART: entity work.receiver
    port map(
        Clk => CLK100MHZ,
        rx_serial => rx,
        rx_dout => LED
    );    
    
    TX_UART: entity work.Transmitter
    port map(
         Clk => CLK100MHZ,
         tx_data_valid => BTNC,
         tx_A => tx_A,
         tx_end => tx_end,
         tx_serial => tx,
         tx_byte => s_Nastaveni_LED_Binarni -- Použití výstupu z komponenty Nastaveni_LED_Binarni
    );
    
    clock: entity work.Clock_enable
    port map(
        Num_clkPer => s_bound,
        RESET => RESET_syn,
        ce => s_enable,
        Clk => CLK100MHZ
    );
      
    UART_Speed : process (CLK100MHZ)
    begin		
        if CLK100MHZ'event and CLK100MHZ = '1' then
            s_bound <= x"28a0";	--10400
        end if;
    end process UART_Speed;	    
end Behavioral;